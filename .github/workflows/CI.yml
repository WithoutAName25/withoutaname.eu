name: CI

on:
  push:
    branches: [master]
  pull_request:

jobs:
  base:
    name: Build base image
    uses: ./.github/workflows/docker.yml
    with:
      push: false
      run: false
      target: base
      tags: withoutaname/withoutaname.eu:base
    secrets: inherit

  checks:
    strategy:
      fail-fast: false
      matrix:
        target: [lint, check]
    name: Build ${{ matrix.target }} image
    needs: base
    uses: ./.github/workflows/docker.yml
    with:
      push: false
      run: true
      target: ${{ matrix.target }}
      tags: withoutaname/withoutaname.eu:${{ matrix.target }}
    secrets: inherit

  unit:
    name: Test and upload coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache pnpm modules
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: pnpm-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-${{ runner.os }}-

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          run_install: true
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 19.x
          registry-url: https://registry.npmjs.org/

      - name: Test
        run: pnpm run test:unit:ci

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          flags: unit
          files: ./coverage/coverage-final.json

  version:
    name: Get current version
    runs-on: ubuntu-latest
    outputs:
      value: ${{ steps.version.outputs.value }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get current version
        id: version
        run: |
          TAGS=withoutaname/withoutaname.eu:latest
          VERSION=$(expr match "$(git tag --points-at HEAD)" '.*v\([0-9]\+\.[0-9]\+\.[0-9]\+\).*') \
          && TAGS="$TAGS,withoutaname/withoutaname.eu:$VERSION" \
          || echo "No version found"
          echo "value=$TAGS" >> $GITHUB_OUTPUT

  publish:
    name: Build and push final image
    needs: [ base, checks, unit, version]
    if: ${{ success() && github.event_name == 'push' && github.ref_name == 'master' }}
    uses: ./.github/workflows/docker.yml
    with:
      push: true
      run: false
      target: final
      tags: ${{ needs.version.outputs.value }}
    secrets: inherit

  deploy:
    name: Deploy latest image
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        run: ${{ secrets.DEPLOY_COMMAND }}
