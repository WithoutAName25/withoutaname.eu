name: CI

on:
  push:
    branches: [master]
  pull_request:

jobs:
  base:
    name: Build base image;
    runs-on: ubuntu-latest
    steps:
      - name: Build and push
        uses: ./.github/workflows/docker.yml
        with:
          push: false
          target: base
          tags: withoutaname/withoutaname.eu:base

  checks:
    strategy:
      matrix:
        target: [lint, check, e2etest, build]
    name: Build ${{ matrix.target }} image
    runs-on: ubuntu-latest
    needs: base
    steps:
      - name: Build and push
        uses: ./.github/workflows/docker.yml
        with:
          push: false
          target: ${{ matrix.target }}
          tags: withoutaname/withoutaname.eu:${{ matrix.target }}

  publish:
    name: Build and push final image
    runs-on: ubuntu-latest
    needs: [base, checks]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get current version
        id: version
        run: |
          VERSION=$(expr match "$(git tag --points-at HEAD)" '.*v\([0-9]\+\.[0-9]\+\.[0-9]\+\).*')
          TAGS=withoutaname/withoutaname.eu:latest
          [ ! -z $VERSION ] && TAGS="$TAGS,withoutaname/withoutaname.eu:$VERSION"
          echo "::set-output name=value::$TAGS"
      - name: Build and push
        uses: ./.github/workflows/docker.yml
        with:
          push: true
          target: final
          tags: ${{ steps.version.outputs.value }}

  unit:
    name: Test and upload coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Bun
        uses: antongolub/action-setup-bun@v1

      - name: Test
        run: bun run test:unit:ci

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          flags: unit
          files: ./coverage/coverage-final.json
